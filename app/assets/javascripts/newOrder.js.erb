// Code to populate unit price, discount, tax once item is Selected/changed.
$(document).on('change', 'select', function() {
    //alert('error');
    var tr = $(this).closest('tr');
    $.ajax({
      url: "/items/getdata",
      type: 'get',
      data: {data_value: $(this).val()},
      dataType: 'json',
      success: function (data) {
        
        //Assigining Quantity=1 as soon as item is selected.
         tr.find('input[name="order[order_placed][][quantity]"]').val("1");
         //Assiging data to Fields on GUI after fetching from DB.
         tr.find('input[name="order[order_placed][][unitprice]"]').val(data.unit_price);
         tr.find('input[name="order[order_placed][][tax]"]').val(data.tax);
         tr.find('input[name="order[order_placed][][discount]"]').val(data.discount);
         //Calculating "Item Total Price"
         var itemTotalPriceCalculated = tr.find('input[name="order[order_placed][][quantity]"]').val()*data.unit_price;
         tr.find('input[name="order[order_placed][][itemtotalprice]"]').val(itemTotalPriceCalculated);
      },
      error: function () {
        alert('error');
      }
    });

   
  });

//Code to load Live Menu items from DB as soon as document is ready
var MENU_ITEM_LIST = [];
$(document).ready(function() {

 $.ajax({
      url: "/items/getList",
      type: 'get',
      data: {data_value: "Item"}, //Not needed to use this parameter "Data", As it is throwing error, simply used to save time.
      dataType: 'json',
      success: function (data) {
        MENU_ITEM_LIST=data;
      },
      error: function () {
        alert('error');
      }
    });
  });


//Code to Add new row dynamically.
 var trGlobal; //Vriable to initialise select2 on dynalic load
$(function () {
    //var flag = 1;
    var addInputRow = function () {
        //create <tr> tag and <td> tags
              var tr = document.createElement("tr");
                

            function callback(attribname,siz){
                //Replace 0 with falg variable orderplaced[][itemname] 
                /*idAttributitemname = 
                       "order[orderplaced][" + attribname + "][0]".replace("0", flag);
                nameAttributitemname = 
                       "order[orderplaced][" + attribname + "][0]".replace("0", flag);*/

                nameAttributitemname = 
                       "order[order_placed][][" + attribname + "]";
                
                //create input for itemname, set it's type, id and name attribute
                var inputitemname = document.createElement("INPUT");
                inputitemname.setAttribute("type", "text");
                inputitemname.setAttribute("name", nameAttributitemname);
                inputitemname.setAttribute("size", siz);
                inputitemname.setAttribute("class", "form-control");
                //and append it to <td> element and then <tr> 
                var td = document.createElement("td");
                td.appendChild(inputitemname);  
                tr.appendChild(td);
            }

            function callbackItemName(attribname,siz){
                
                nameAttributitemname = 
                       "order[order_placed][][" + attribname + "]";
                
                //create input for itemname, set it's type, id and name attribute style="width: 300px"
                var inputitemname = document.createElement("select");
                inputitemname.setAttribute("id", "order_place_id");
                inputitemname.setAttribute("name", nameAttributitemname);
                inputitemname.setAttribute("style", "width: 300px");
                inputitemname.setAttribute("class", "form-control");

                //Create an empty option tag for place holder - as per Select2 Gem
                var optionInputItemName = document.createElement("option");
                optionInputItemName.setAttribute("value","");
                inputitemname.appendChild(optionInputItemName);

                //Old method of apppending values to dynamic rows. Failed to fetch live values. Hence depricated.
                /*inputitemname.append("<% Item.all.each do |item| %>");
                var optionInputItemNameTwo = document.createElement("option");
                optionInputItemNameTwo.setAttribute("value","<%= item.item_name %>");
                var optionInputItemNameTwoDisplayText = document.createTextNode("<%= item.item_name %>");
                optionInputItemNameTwo.appendChild(optionInputItemNameTwoDisplayText);
                 inputitemname.appendChild(optionInputItemNameTwo);
                  inputitemname.append("<%= item.item_name %><% end %>");*/

                 // Append Live values from DB to newly added dynamic rows
                 $.each(MENU_ITEM_LIST, function (i, item) {
                   $(inputitemname).append($('<option>', { 
                        value: item,
                        text : item
                    }));
                });

                

                //and append it to <td> element and then <tr> 
                var td = document.createElement("td");
                td.appendChild(inputitemname);  
                tr.appendChild(td);
                trGlobal = inputitemname;
            }


            function callbackMinusbutton(){
                
                //create input for itemname, set it's type, id and name attribute
                var inputitemname = document.createElement("button");
                inputitemname.setAttribute("type", "button");
                inputitemname.setAttribute("name", "MinusButton");
                inputitemname.setAttribute("onClick", "$(this).closest('tr').remove();");
                inputitemname.setAttribute("class", "btn btn-default btn-sm sub");

                 var inputitemnameSpan = document.createElement("span");
                 inputitemnameSpan.setAttribute("class", "glyphicon glyphicon-minus");

                 inputitemname.appendChild(inputitemnameSpan);

                //and append it to <td> element and then <tr> 
                var td = document.createElement("td");
                td.appendChild(inputitemname);  
                tr.appendChild(td);
            }

            callbackItemName("itemname","30");
            callback("quantity","10");
            callback("unitprice","10");
            callback("tax","10");
            callback("discount","10");
            callback("itemtotalprice","10");
            callbackMinusbutton();
            
            document.getElementById("template").appendChild(tr);

    }; 

    var addAll = function (){
         addInputRow();
    };

   $('.add').on('click', addAll);
   
    
});
